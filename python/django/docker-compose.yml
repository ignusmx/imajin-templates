services:
  app:
    build:
      context: .
      target: development
    ports:
      - "3000:3000"
    entrypoint: /app/scripts/entrypoint.sh
    volumes:
      - .:/app
      - venv_cache:/app/.venv
      - uv_cache:/home/djangouser/.cache/uv
      - node_modules_cache:/app/node_modules
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - DEBUG=True
      - DATABASE_URL=postgresql://postgres:password@db:5432/django_development
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - django_network
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: django_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - django_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - django_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  celery:
    build:
      context: .
      target: development
    command: uv run celery -A config worker -l info --concurrency=2
    volumes:
      - .:/app
      - venv_cache:/app/.venv
      - uv_cache:/home/djangouser/.cache/uv
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - DEBUG=True
      - DATABASE_URL=postgresql://postgres:password@db:5432/django_development
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - C_FORCE_ROOT=1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - django_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "uv run celery -A config inspect ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  celery-beat:
    build:
      context: .
      target: development
    command: uv run celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
      - venv_cache:/app/.venv
      - uv_cache:/home/djangouser/.cache/uv
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - DEBUG=True
      - DATABASE_URL=postgresql://postgres:password@db:5432/django_development
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - C_FORCE_ROOT=1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      app:
        condition: service_healthy
      celery:
        condition: service_started
    networks:
      - django_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/bin/sh", "-c", "ps aux | grep 'celery.*beat' | grep -v grep"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
  redis_data:
  uv_cache:
  node_modules_cache:
  venv_cache:

networks:
  django_network:
    driver: bridge 